# 需要安装 xclip tmuxinator

#此类配置可以在命令行模式中输入show-options -g查询
#窗口的初始序号；默认为0，这里设置为1
set -g base-index 1
setw -g pane-base-index 1
#提示信息的持续时间；设置足够的时间以避免看不清提示，单位为毫秒
set -g display-time 5000
#控制台激活后的持续时间；设置合适的时间以避免每次操作都要先激活控制台，单位为毫秒
set -g repeat-time 1000
#操作状态栏时的默认键盘布局；可以设置为vi或emacs
set -g status-keys vi

#此类设置可以在命令行模式中输入show-window-options -g查询
#复制模式中的默认键盘布局；可以设置为vi或emacs
setw -g mode-keys vi
#开启窗口的UTF-8支持
setw -g utf8 on

#将激活控制台的快捷键由Ctrl+b修改为Ctrl+a
set -g prefix C-j
unbind-key C-b
bind-key C-j send-prefix

#添加自定义快捷键
#按z结束当前会话；相当于进入命令行模式后输入kill-session
   bind-key z kill-session
#按h将当前面板布局切换为even-horizontal
#相当于进入命令行模式后输入select-layout even-horizontal
   bind-key H select-layout even-horizontal
#按v将当前面板布局切换为even-vertical
#相当于进入命令行模式后输入select-layout even-vertical
   bind-key V select-layout even-vertical

bind-key k selectp -U
bind-key j selectp -D
bind-key h selectp -L
bind-key l selectp -R

# enable mouse selection in copy mode
setw -g mode-mouse off
set -g mouse-select-pane off
#set -g mouse-resize-pane off
#set -g mouse-select-window off

# scrolling with terminal scroll bar
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

bind-key e split-window -h
bind-key o split-window

#Changing the Default Delay
set -sg escape-time 1

#Creating a Shortcut to Reload the Configuration
bind r source-file ~/.tmux.conf \; display "Reloaded!"

#we can use PREFIX CTRL - h and PREFIX CTRL - l to cycle through the
#windows by binding those keystrokes to the respective commands:
#
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# 256 color
set -g default-terminal "screen-256color"


set -g status-fg white
set -g status-bg black


setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright


set -g pane-border-fg green
set -g pane-border-bg black

set -g pane-active-border-fg yellow
set -g pane-active-border-bg black

set -g message-fg white
set -g message-bg black
set -g message-attr bright

set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-right "#[fg=cyan]%T #[fg=white]%a"
set -g status-right-length 40
set -g status-utf8 on

#Keeping Status Bar Info Up to Date
set -g status-interval 60
#Centering the Window List
set -g status-justify centre

#Identifying Activity in Other Windows
setw -g monitor-activity on
set -g visual-activity on

#Working with the Clipboard on Linux
#need xclip
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

#Maximizing and Restoring Panes
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp

unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp


#Recording Program Output to a Log

bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

bind b split-window "tmux lsw | percol --initial-index $(tmux lsw | awk '/active.$/ {print NR-1}') | cut -d':' -f 1 | tr -d '\n' | xargs -0 tmux select-window -t"
bind B split-window "tmux ls | percol --initial-index $(tmux ls | awk \"/^$(tmux display-message -p '#{session_name}'):/ {print NR-1}\") | cut -d':' -f 1 | tr -d '\n' | xargs -0 tmux switch-client -t"
